/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View.Information;

import Common.Constants;
import Entity.Invoice;
import Entity.Manager;
import Entity.PaymentMethod;
import Entity.Resident;
import Model.InvoiceModel;
import Model.ManagerModel;
import Model.PaymentMethodModel;
import Model.ResidentModel;
import View.Management;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;

/**
 *
 * @author User
 */
public class InvoiceInformation extends javax.swing.JDialog {

    private Management management;
    private Manager manager;
    private Invoice invoice;
    private int invoiceAction;
    /**
     * Creates new form NewJDialog
     */
    public InvoiceInformation(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }
    
    public InvoiceInformation(Management management, Manager manager, Invoice invoice, int invoiceAction) {
        super(management, true);
        initComponents();

        this.management = management;
        this.manager = manager;
        this.invoice = invoice;
        this.invoiceAction = invoiceAction;

        initInvoiceInfomation();
        this.setLocationRelativeTo(management);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jComboBox2 = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jComboBox3 = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel4.setText("Ngày thanh toán");

        jLabel5.setText("Phương thức thanh toán");

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Thông tin hóa đơn");

        jLabel3.setText("Quản lý");

        jLabel2.setText("Ngày xuất đơn");

        jLabel6.setText("Cư dân");

        jButton1.setText("Cập nhật");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel3)
                            .addComponent(jLabel6))
                        .addGap(50, 50, 50)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jComboBox3, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jComboBox2, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jTextField2, javax.swing.GroupLayout.DEFAULT_SIZE, 185, Short.MAX_VALUE)
                            .addComponent(jTextField1))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(44, 44, 44))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jLabel1)
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (invoiceAction == Constants.INVOICE_ADD) {
            String date = jTextField1.getText();
            String paymentDate = jTextField2.getText();
            PaymentMethod method = (PaymentMethod) jComboBox1.getSelectedItem();
            Manager manager = (Manager) jComboBox2.getSelectedItem();
            Resident resident = (Resident) jComboBox3.getSelectedItem();
            
            int invoiceId = InvoiceModel.INST.addInvoice(date, paymentDate, method.getPaymentMethodId(), manager.getManagerId(), resident.getResidentId());
            if (invoiceId > 0) {
                management.addInvoice(invoiceId, date, paymentDate, method, manager, resident);
                JOptionPane.showMessageDialog(this, "Thêm hóa đơn mới thành công!", "Thành công", JOptionPane.INFORMATION_MESSAGE);
                this.dispose();
            } else {
                JOptionPane.showMessageDialog(this, "Xảy ra lỗi!", "Thất bại", JOptionPane.ERROR_MESSAGE);
            }
        } else if (invoiceAction == Constants.INVOICE_UPDATE) {
            int invoiceId = invoice.getInvoiceId();
            String date = jTextField1.getText();
            String paymentDate = jTextField2.getText();
            PaymentMethod paymentMethod = (PaymentMethod) jComboBox1.getSelectedItem();
            Manager manager = (Manager) jComboBox2.getSelectedItem();
            Resident resident = (Resident) jComboBox3.getSelectedItem();

            if (InvoiceModel.INST.updateInvoice(invoiceId, date, paymentDate, paymentMethod.getPaymentMethodId(), manager.getManagerId(), resident.getResidentId())) {
                management.updateInvoice(invoiceId, date, paymentDate, paymentMethod, manager, resident);
                JOptionPane.showMessageDialog(this, "Cập nhật hóa đơn thành công!", "Thành công", JOptionPane.INFORMATION_MESSAGE);
                this.dispose();
            } else {
                JOptionPane.showMessageDialog(this, "Xảy ra lỗi!", "Thất bại", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InvoiceInformation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InvoiceInformation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InvoiceInformation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InvoiceInformation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                InvoiceInformation dialog = new InvoiceInformation(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JComboBox<String> jComboBox3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables

    private void initInvoiceInfomation() {
        if (invoiceAction == Constants.INVOICE_ADD) {
            jButton1.setText("Thêm hóa đơn");
            jTextField2.setEditable(false);
            
            initPaymentMethodComboBox(false);
            initManagerComboBox(false);
            initResidentComboBox(false);
        } else if (invoiceAction == Constants.INVOICE_UPDATE) {
            jTextField1.setText(invoice.getDate());
            jTextField2.setText(invoice.getPaymentDate());
            
            initPaymentMethodComboBox(true);
            initManagerComboBox(true);
            initResidentComboBox(true);
        }
    }
    
    private void initPaymentMethodComboBox(boolean setSelectedValue) {
        DefaultComboBoxModel model = (DefaultComboBoxModel) jComboBox1.getModel();
        
        PaymentMethodModel.INST.getListAll()
                .forEach(paymentMethod -> model.addElement(paymentMethod));
        
        if (setSelectedValue) {
            model.setSelectedItem(PaymentMethodModel.INST.MAP.get(invoice.getPaymentMethodId()));
        }
    }
    
    private void initManagerComboBox(boolean setSelectedValue) {
        DefaultComboBoxModel model = (DefaultComboBoxModel) jComboBox2.getModel();
        
        ManagerModel.INST.getListAll()
                .forEach(manager -> model.addElement(manager));
        
        if (setSelectedValue) {
            model.setSelectedItem(ManagerModel.INST.MAP.get(invoice.getManagerId()));
        } else {
            model.setSelectedItem(manager);
            jComboBox2.setEnabled(false);
        }
    }
    
    private void initResidentComboBox(boolean setSelectedValue) {
        DefaultComboBoxModel model = (DefaultComboBoxModel) jComboBox3.getModel();
        
        ResidentModel.INST.getListAll()
                .forEach(resident -> model.addElement(resident));
        
        if (setSelectedValue) {
            model.setSelectedItem(ResidentModel.INST.MAP.get(invoice.getResidentId()));
        }
    }
}
